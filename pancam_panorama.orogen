name "pancam_panorama"

import_types_from "pancam_panoramaTypes.hpp"
import_types_from "base"

task_context "Task" do
    needs_configuration

    property("cameraPositions", "/std/vector</base/Vector2d>").
        doc("Camera pan/tilt orientations for pictures, in degrees")
    property("positionErrorMargin", "double", 0.1).
    	doc("PanCam pan and tilt position error margin, in degrees")
    property("frameDelayTimeMs", "int", 100).
    	doc("Minimum delay in milliseconds before saving a frame after the PanCam reaches its goal position")

    # Input ports
    input_port("pan_angle_in", "double").
        doc("Feedback from the PTU pan angle")
    input_port("tilt_angle_in", "double").
        doc("Feedback from the PTU tilt angle")
    input_port("left_frame_in", ro_ptr('base::samples::frame::Frame')).
        doc("Input of the left camera of the PTU")
    input_port("right_frame_in", ro_ptr('base::samples::frame::Frame')).
        doc("Input of the right camera of the PTU")
    input_port("execution_valid", "bool").
        doc("Inhibits further images acquisition, but already moves to next position")
    

    # Output ports
    output_port("pan_angle_out", "double").
        doc("PTU pan command")
    output_port("tilt_angle_out", "double").
        doc("PTU tilt command")
    output_port("left_frame_out", ro_ptr('base::samples::frame::Frame')).
        doc("Output of the left camera of the PTU")
    output_port("right_frame_out", ro_ptr('base::samples::frame::Frame')).
        doc("Output of the right camera of the PTU")
    output_port("pan_angle_out_degrees", "double").
        doc("PTU pan angle, in degrees")
    output_port("tilt_angle_out_degrees", "double").
        doc("PTU tilt angle, in degrees")

    periodic 0.01
end

